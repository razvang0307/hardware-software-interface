"use strict";(self.webpackChunkhardware_software_interface=self.webpackChunkhardware_software_interface||[]).push([[7507],{5680:(e,r,t)=>{t.d(r,{xA:()=>l,yg:()=>g});var n=t(6540);function s(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){s(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,s=function(e,r){if(null==e)return{};var t,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(s[t]=e[t]);return s}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var d=n.createContext({}),c=function(e){var r=n.useContext(d),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},l=function(e){var r=c(e.components);return n.createElement(d.Provider,{value:r},e.children)},y="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,s=e.mdxType,a=e.originalType,d=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),y=c(t),p=s,g=y["".concat(d,".").concat(p)]||y[p]||u[p]||a;return t?n.createElement(g,o(o({ref:r},l),{},{components:t})):n.createElement(g,o({ref:r},l))}));function g(e,r){var t=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var a=t.length,o=new Array(a);o[0]=p;var i={};for(var d in r)hasOwnProperty.call(r,d)&&(i[d]=r[d]);i.originalType=e,i[y]="string"==typeof e?e:s,o[1]=i;for(var c=2;c<a;c++)o[c]=t[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},4364:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=t(8168),s=(t(6540),t(5680));const a={},o="Addressing Arrays",i={unversionedId:"Lab 6 - Registers and Memory Addressing/Memory Addressing/Guides/Addressing Arrays/README",id:"Lab 6 - Registers and Memory Addressing/Memory Addressing/Guides/Addressing Arrays/README",title:"Addressing Arrays",description:"To follow this guide, you'll need to use the addressing_arrays.asm file located in the guides/addressing-arrays/support directory.",source:"@site/docs/Lab 6 - Registers and Memory Addressing/Memory Addressing/Guides/Addressing Arrays/README.md",sourceDirName:"Lab 6 - Registers and Memory Addressing/Memory Addressing/Guides/Addressing Arrays",slug:"/Lab 6 - Registers and Memory Addressing/Memory Addressing/Guides/Addressing Arrays/",permalink:"/hardware-software-interface/Lab 6 - Registers and Memory Addressing/Memory Addressing/Guides/Addressing Arrays/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Guides",permalink:"/hardware-software-interface/Lab 6 - Registers and Memory Addressing/Memory Addressing/Guides/"},next:{title:"Declarations",permalink:"/hardware-software-interface/Lab 6 - Registers and Memory Addressing/Memory Addressing/Guides/Declarations/"}},d={},c=[],l={toc:c},y="wrapper";function u(e){let{components:r,...t}=e;return(0,s.yg)(y,(0,n.A)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,s.yg)("h1",{id:"addressing-arrays"},"Addressing Arrays"),(0,s.yg)("p",null,"To follow this guide, you'll need to use the ",(0,s.yg)("inlineCode",{parentName:"p"},"addressing_arrays.asm")," file located in the ",(0,s.yg)("inlineCode",{parentName:"p"},"guides/addressing-arrays/support")," directory."),(0,s.yg)("p",null,"The program increments the values of an array of 10 integers by 1 and iterates through the array before and after to show the changes."),(0,s.yg)("blockquote",null,(0,s.yg)("p",{parentName:"blockquote"},(0,s.yg)("strong",{parentName:"p"},"Note:")," ",(0,s.yg)("inlineCode",{parentName:"p"},"ecx")," is used as the loop counter.\nSince the array contains ",(0,s.yg)("inlineCode",{parentName:"p"},"dwords")," (4 bytes), the loop counter is multiplied by 4 to get the address of the next element in the array.")))}u.isMDXComponent=!0}}]);