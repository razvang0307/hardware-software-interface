"use strict";(self.webpackChunkhardware_software_interface=self.webpackChunkhardware_software_interface||[]).push([[4915],{5680:(e,r,t)=>{t.d(r,{xA:()=>c,yg:()=>g});var n=t(6540);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(t),f=a,g=u["".concat(l,".").concat(f)]||u[f]||m[f]||i;return t?n.createElement(g,o(o({ref:r},c),{},{components:t})):n.createElement(g,o({ref:r},c))}));function g(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=f;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},6145:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=t(8168),a=(t(6540),t(5680));const i={},o="Reversing a String",s={unversionedId:"Lab 1 - Number Representation/Pointers in C/Drills/Tasks/Mirror/README",id:"Lab 1 - Number Representation/Pointers in C/Drills/Tasks/Mirror/README",title:"Reversing a String",description:"You will solve the exercise starting from the file mirror.c located in the directory drills/tasks/mirror/support/.",source:"@site/docs/Lab 1 - Number Representation/Pointers in C/Drills/Tasks/Mirror/README.md",sourceDirName:"Lab 1 - Number Representation/Pointers in C/Drills/Tasks/Mirror",slug:"/Lab 1 - Number Representation/Pointers in C/Drills/Tasks/Mirror/",permalink:"/hardware-software-interface/Lab 1 - Number Representation/Pointers in C/Drills/Tasks/Mirror/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Length and Equality with Bitwise Operations",permalink:"/hardware-software-interface/Lab 1 - Number Representation/Pointers in C/Drills/Tasks/Length and Equality with Bitwise Operations/"},next:{title:"Lab 2 - Memory Operations. Introduction to GDB",permalink:"/hardware-software-interface/Lab 2 - Memory Operations. Introduction to GDB/"}},l={},p=[],c={toc:p},u="wrapper";function m(e){let{components:r,...t}=e;return(0,a.yg)(u,(0,n.A)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"reversing-a-string"},"Reversing a String"),(0,a.yg)("p",null,"You will solve the exercise starting from the file ",(0,a.yg)("inlineCode",{parentName:"p"},"mirror.c")," located in the directory ",(0,a.yg)("inlineCode",{parentName:"p"},"drills/tasks/mirror/support/"),"."),(0,a.yg)("p",null,"Using pointer operations, implement a C program that reverses a string of characters.\nThe ",(0,a.yg)("inlineCode",{parentName:"p"},"mirror")," function should perform an ",(0,a.yg)("strong",{parentName:"p"},"in-place")," reversal of the characters in the string (upon exiting the function, the input string will contain the reversed string)."),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},(0,a.yg)("strong",{parentName:"p"},"NOTE"),": Do not access string elements using the form ",(0,a.yg)("inlineCode",{parentName:"p"},"s[i]"),"."),(0,a.yg)("p",{parentName:"blockquote"},(0,a.yg)("strong",{parentName:"p"},"TIP"),":"),(0,a.yg)("pre",{parentName:"blockquote"},(0,a.yg)("code",{parentName:"pre",className:"language-c"},'mirror("AnaAreMere") = "ereMerAanA"\n\nmirror("asdfghjl") = "ljhgfdsa"\n\nmirror("qwerty") = "ytrewq"\n'))),(0,a.yg)("p",null,"If you're having difficulties solving this exercise, go through ",(0,a.yg)("a",{parentName:"p",href:"/hardware-software-interface/Lab%201%20-%20Number%20Representation/Pointers%20in%20C/Reading/"},"this")," reading material."))}m.isMDXComponent=!0}}]);